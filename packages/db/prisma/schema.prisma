generator client {
  provider = "prisma-client-js"

}

datasource db {
  provider = "postgresql"
  url      =env("DATABASE_URL")

   
}

model User {
   id             String      @id @default(uuid())
  name           String?
  email          String      @unique

  image          String?
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  bio            String?
  profileView    Int         @default(0)
  courses        Course[]
  userConversations      Conversation[] @relation("UserConversations")
 
  messages    Message[]   @relation("UserMessages")
  location       String?
  skills         String[]
  preferences    String[]
  followersCount Int         @default(0)
  followingCount Int         @default(0)
  lastLogin      DateTime?
  reputation     Float       @default(0.0)
  isVerified     Boolean     @default(false)
  
  
  socialLinks    Json?

}

model Course {
  id           String       @id @default(uuid())
  ownerId   String
  courseTitle   String
  courseDescription String
  category String  @default("all")
  viewCount Int @default(0)
  rentalDuration String
  rentalPrice      Float
  courseImage String
  courseUrl    String  
  active Boolean @default(true) 
  language String @default("hindi") 
  courseType String @default("self-paced")
  isLive     Boolean @default(false)
  
  user               User    @relation(fields: [ownerId], references: [id])

}


model Conversation {
  id        String     @id @default(uuid()) 
  name      String
  users     User[]    @relation("UserConversations")
  messages  Message[] @relation("ConversationMessages")
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model Message {
  id             String     @id @default(uuid()) 
  content        String
  conversation   Conversation @relation("ConversationMessages", fields: [conversationId], references: [id])
  conversationId String
  sender         User        @relation("UserMessages", fields: [senderId], references: [id])
  senderId       String
  read           Boolean     @default(false)
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
}



